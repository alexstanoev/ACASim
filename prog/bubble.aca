; num ints
MOVI 0 10 R1

; array base
MOVI 0 0 R0

; print unsorted array
SPC 2 RA
JI %printArr

; spacing
SYS RZ
SYS RZ

; sort
SPC 2 RA
JI %sort

; print again
SPC 2 RA
JI %printArr

HALT

sort:
    ; return to caller
    J RA

printArr:
	; num iterations
	ADDI R1 0 R2
	; offset
	XOR R3 R3 R3
printArrLoop:
	; get int at mem[base + offset]
	LD R0 R3 R4
	; print
	SYS R4

	; offset++
	ADDI R3 1 R4
	ADDI R4 0 R3

	; loop
    SUBI R2 1 R4
    ADDI R4 0 R2
    BGZ R4 %printArrLoop

    ; return to caller
    J RA